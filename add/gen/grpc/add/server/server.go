// Code generated by goa v3.7.6, DO NOT EDIT.
//
// add gRPC server
//
// Command:
// $ goa gen add/design

package server

import (
	add "add/gen/add"
	addpb "add/gen/grpc/add/pb"
	"context"

	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
)

// Server implements the addpb.AddServer interface.
type Server struct {
	AddnumsH goagrpc.UnaryHandler
	addpb.UnimplementedAddServer
}

// ErrorNamer is an interface implemented by generated error structs that
// exposes the name of the error as defined in the expr.
type ErrorNamer interface {
	ErrorName() string
}

// New instantiates the server struct with the add service endpoints.
func New(e *add.Endpoints, uh goagrpc.UnaryHandler) *Server {
	return &Server{
		AddnumsH: NewAddnumsHandler(e.Addnums, uh),
	}
}

// NewAddnumsHandler creates a gRPC handler which serves the "add" service
// "addnums" endpoint.
func NewAddnumsHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeAddnumsRequest, EncodeAddnumsResponse)
	}
	return h
}

// Addnums implements the "Addnums" method in addpb.AddServer interface.
func (s *Server) Addnums(ctx context.Context, message *addpb.AddnumsRequest) (*addpb.AddnumsResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "addnums")
	ctx = context.WithValue(ctx, goa.ServiceKey, "add")
	resp, err := s.AddnumsH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*addpb.AddnumsResponse), nil
}
