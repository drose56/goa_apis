// Code generated by goa v3.7.6, DO NOT EDIT.
//
// add gRPC client encoders and decoders
//
// Command:
// $ goa gen add/design

package client

import (
	add "add/gen/add"
	addpb "add/gen/grpc/add/pb"
	"context"

	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc"
	"google.golang.org/grpc/metadata"
)

// BuildAddnumsFunc builds the remote method to invoke for "add" service
// "addnums" endpoint.
func BuildAddnumsFunc(grpccli addpb.AddClient, cliopts ...grpc.CallOption) goagrpc.RemoteFunc {
	return func(ctx context.Context, reqpb interface{}, opts ...grpc.CallOption) (interface{}, error) {
		for _, opt := range cliopts {
			opts = append(opts, opt)
		}
		if reqpb != nil {
			return grpccli.Addnums(ctx, reqpb.(*addpb.AddnumsRequest), opts...)
		}
		return grpccli.Addnums(ctx, &addpb.AddnumsRequest{}, opts...)
	}
}

// EncodeAddnumsRequest encodes requests sent to add addnums endpoint.
func EncodeAddnumsRequest(ctx context.Context, v interface{}, md *metadata.MD) (interface{}, error) {
	payload, ok := v.(*add.AddnumsPayload)
	if !ok {
		return nil, goagrpc.ErrInvalidType("add", "addnums", "*add.AddnumsPayload", v)
	}
	return NewProtoAddnumsRequest(payload), nil
}

// DecodeAddnumsResponse decodes responses from the add addnums endpoint.
func DecodeAddnumsResponse(ctx context.Context, v interface{}, hdr, trlr metadata.MD) (interface{}, error) {
	message, ok := v.(*addpb.AddnumsResponse)
	if !ok {
		return nil, goagrpc.ErrInvalidType("add", "addnums", "*addpb.AddnumsResponse", v)
	}
	res := NewAddnumsResult(message)
	return res, nil
}
