// Code generated by goa v3.7.6, DO NOT EDIT.
//
// poke gRPC client CLI support package
//
// Command:
// $ goa gen poke/design

package client

import (
	"encoding/json"
	"fmt"
	pokepb "poke/gen/grpc/poke/pb"
	poke "poke/gen/poke"
)

// BuildPokemonPayload builds the payload for the poke pokemon endpoint from
// CLI flags.
func BuildPokemonPayload(pokePokemonMessage string) (*poke.PokemonPayload, error) {
	var err error
	var message pokepb.PokemonRequest
	{
		if pokePokemonMessage != "" {
			err = json.Unmarshal([]byte(pokePokemonMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"name\": \"Molestiae laudantium tempora.\"\n   }'")
			}
		}
	}
	v := &poke.PokemonPayload{
		Name: message.Name,
	}

	return v, nil
}
